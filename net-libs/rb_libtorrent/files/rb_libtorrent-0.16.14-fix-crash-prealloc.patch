part of upstream commit:
------------------------------------------------------------------------
r9684 | arvidn | 2014-02-07 09:52:39 +0100 (Fri, 07 Feb 2014) | 1 line

fix crash when using full allocation storage mode
------------------------------------------------------------------------

bugs:
https://code.google.com/p/libtorrent/issues/detail?id=577
https://bugs.argentlinux.org/show_bug.cgi?id=4613

Index: src/storage.cpp
===================================================================
--- src/storage.cpp	(revision 9683)
+++ src/storage.cpp	(revision 9684)
@@ -1223,7 +1223,7 @@
 			// if the file has priority 0, don't allocate it
 			int file_index = files().file_index(*file_iter);
 			if (m_allocate_files && (op.mode & file::rw_mask) != file::read_only
-				&& (m_file_priority.size() < file_index || m_file_priority[file_index] > 0))
+				&& (m_file_priority.size() <= file_index || m_file_priority[file_index] > 0))
 			{
 				TORRENT_ASSERT(m_file_created.size() == files().num_files());
 				if (m_file_created[file_index] == false)
@@ -2983,6 +2983,8 @@
 	int piece_manager::slot_for(int piece) const
 	{
 		if (m_storage_mode != internal_storage_mode_compact_deprecated) return piece;
+		// this happens in seed mode, where we skip checking fastresume
+		if (m_piece_to_slot.empty()) return piece;
 		TORRENT_ASSERT(piece < int(m_piece_to_slot.size()));
 		TORRENT_ASSERT(piece >= 0);
 		return m_piece_to_slot[piece];
