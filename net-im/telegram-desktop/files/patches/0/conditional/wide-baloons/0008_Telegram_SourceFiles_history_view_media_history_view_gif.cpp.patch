diff --git a/Telegram/SourceFiles/history/view/media/history_view_gif.cpp b/Telegram/SourceFiles/history/view/media/history_view_gif.cpp
index f772eebfe..34615bdf6 100644
--- a/Telegram/SourceFiles/history/view/media/history_view_gif.cpp
+++ b/Telegram/SourceFiles/history/view/media/history_view_gif.cpp
@@ -33,6 +33,7 @@ https://github.com/telegramdesktop/tdesk
 #include "data/data_document.h"
 #include "data/data_file_origin.h"
 #include "app.h"
+#include "facades.h"
 #include "styles/style_history.h"
 
 namespace HistoryView {
@@ -111,6 +112,9 @@ QSize Gif::countOptimalSize() {
 			_parent->skipBlockHeight());
 	}
 
+	const auto captionWithPaddings = _caption.maxWidth()
+		+ st::msgPadding.left()
+		+ st::msgPadding.right();
 	const auto maxSize = _data->isVideoFile()
 		? st::maxMediaSize
 		: _data->isVideoMessage()
@@ -119,10 +123,13 @@ QSize Gif::countOptimalSize() {
 	const auto size = style::ConvertScale(videoSize());
 	auto tw = size.width();
 	auto th = size.height();
-	if (tw > maxSize) {
+	if ((!Adaptive::ChatWide() || captionWithPaddings <= maxSize) && tw > maxSize) {
 		th = (maxSize * th) / tw;
 		tw = maxSize;
+	} else if (Adaptive::ChatWide() && captionWithPaddings > maxSize && tw > captionWithPaddings) {
+		th = (captionWithPaddings * th) / tw;
+		tw = captionWithPaddings;
 	}
 	if (th > maxSize) {
 		tw = (maxSize * tw) / th;
 		th = maxSize;
@@ -140,6 +146,9 @@ QSize Gif::countOptimalSize() {
 	}
 	if (_parent->hasBubble()) {
 		if (!_caption.isEmpty()) {
+			if (Adaptive::ChatWide()) {
+				accumulate_max(maxWidth, captionWithPaddings);
+			}
 			auto captionw = maxWidth - st::msgPadding.left() - st::msgPadding.right();
 			minHeight += st::mediaCaptionSkip + _caption.countHeight(captionw);
 			if (isBubbleBottom()) {
@@ -162,6 +171,9 @@ QSize Gif::countOptimalSize() {
 QSize Gif::countCurrentSize(int newWidth) {
 	auto availableWidth = newWidth;
 
+	const auto captionWithPaddings = _caption.maxWidth()
+		+ st::msgPadding.left()
+		+ st::msgPadding.right();
 	const auto maxSize = _data->isVideoFile()
 		? st::maxMediaSize
 		: _data->isVideoMessage()
@@ -170,10 +182,13 @@ QSize Gif::countCurrentSize(int newWidth
 	const auto size = style::ConvertScale(videoSize());
 	auto tw = size.width();
 	auto th = size.height();
-	if (tw > maxSize) {
+	if ((!Adaptive::ChatWide() || captionWithPaddings <= maxSize) && tw > maxSize) {
 		th = (maxSize * th) / tw;
 		tw = maxSize;
+	} else if (Adaptive::ChatWide() && captionWithPaddings > maxSize && tw > captionWithPaddings) {
+		th = (captionWithPaddings * th) / tw;
+		tw = captionWithPaddings;
 	}
 	if (th > maxSize) {
 		tw = (maxSize * tw) / th;
 		th = maxSize;
@@ -197,6 +211,10 @@ QSize Gif::countCurrentSize(int newWidth
 	}
 	if (_parent->hasBubble()) {
 		if (!_caption.isEmpty()) {
+			if (Adaptive::ChatWide()) {
+				accumulate_max(newWidth, captionWithPaddings);
+				accumulate_min(newWidth, availableWidth);
+			}
 			auto captionw = newWidth - st::msgPadding.left() - st::msgPadding.right();
 			newHeight += st::mediaCaptionSkip + _caption.countHeight(captionw);
 			if (isBubbleBottom()) {
