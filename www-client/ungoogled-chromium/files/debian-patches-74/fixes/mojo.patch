description: fix mojo layout test build error
author: Michael Gilbert <mgilbert@debian.org>

--- a/mojo/public/tools/bindings/chromium_bindings_configuration.gni
+++ b/mojo/public/tools/bindings/chromium_bindings_configuration.gni
@@ -8,7 +8,6 @@ _typemap_imports = [
   "//chrome/common/importer/typemaps.gni",
   "//chrome/common/media_router/mojo/typemaps.gni",
   "//chrome/typemaps.gni",
-  "//chromecast/typemaps.gni",
   "//chromeos/typemaps.gni",
   "//chromeos/components/multidevice/mojom/typemaps.gni",
   "//chromeos/services/secure_channel/public/mojom/typemaps.gni",
--- a/content/shell/BUILD.gn
+++ b/content/shell/BUILD.gn
@@ -144,8 +144,6 @@ jumbo_static_library("content_shell_lib"
     "browser/web_test/fake_bluetooth_chooser.h",
     "browser/web_test/leak_detector.cc",
     "browser/web_test/leak_detector.h",
-    "browser/web_test/mojo_web_test_helper.cc",
-    "browser/web_test/mojo_web_test_helper.h",
     "browser/web_test/secondary_test_window_observer.cc",
     "browser/web_test/secondary_test_window_observer.h",
     "browser/web_test/test_info_extractor.cc",
@@ -290,7 +288,6 @@ jumbo_static_library("content_shell_lib"
     "//content/public/common:service_names",
     "//content/shell/test_runner:test_runner",
     "//content/test:content_test_mojo_bindings",
-    "//content/test:mojo_web_test_bindings",
     "//content/test:test_support",
     "//content/test:web_test_support",
     "//device/bluetooth",
--- a/BUILD.gn
+++ b/BUILD.gn
@@ -999,7 +999,6 @@ if (!is_ios) {
       ":layout_test_data_mojo_bindings",
       ":layout_test_data_mojo_bindings_lite",
       "//content/shell:content_shell",
-      "//content/test:mojo_web_test_bindings_js_data_deps",
       "//device/bluetooth/public/mojom:fake_bluetooth_interfaces_js_data_deps",
       "//device/usb/public/mojom:mojom_js_data_deps",
       "//device/vr/public/mojom:mojom_js_data_deps",
--- a/content/browser/service_manager/service_manager_context.cc
+++ b/content/browser/service_manager/service_manager_context.cc
@@ -84,9 +84,6 @@
 #include "services/service_manager/service_manager.h"
 #include "services/service_manager/service_process_launcher.h"
 #include "services/shape_detection/public/mojom/constants.mojom.h"
-#include "services/tracing/public/cpp/tracing_features.h"
-#include "services/tracing/public/mojom/constants.mojom.h"
-#include "services/tracing/tracing_service.h"
 #include "services/video_capture/public/mojom/constants.mojom.h"
 #include "services/video_capture/service_impl.h"
 #include "services/viz/public/interfaces/constants.mojom.h"
@@ -400,11 +397,6 @@ std::unique_ptr<service_manager::Service
       std::move(request));
 }
 
-std::unique_ptr<service_manager::Service> CreateTracingService(
-    service_manager::mojom::ServiceRequest request) {
-  return std::make_unique<tracing::TracingService>(std::move(request));
-}
-
 std::unique_ptr<service_manager::Service> CreateMediaSessionService(
     service_manager::mojom::ServiceRequest request) {
   return std::make_unique<media_session::MediaSessionService>(
@@ -635,19 +627,6 @@ ServiceManagerContext::ServiceManagerCon
   GetContentClient()->browser()->RegisterOutOfProcessServices(
       &out_of_process_services);
 
-  if (base::FeatureList::IsEnabled(features::kTracingServiceInProcess)) {
-    RegisterInProcessService(
-        packaged_services_connection_.get(), tracing::mojom::kServiceName,
-        base::CreateSequencedTaskRunnerWithTraits(
-            {base::MayBlock(), base::TaskShutdownBehavior::SKIP_ON_SHUTDOWN,
-             base::WithBaseSyncPrimitives(),
-             base::TaskPriority::USER_BLOCKING}),
-        base::BindRepeating(&CreateTracingService));
-  } else {
-    out_of_process_services[tracing::mojom::kServiceName] =
-        base::BindRepeating(&base::ASCIIToUTF16, "Tracing Service");
-  }
-
   out_of_process_services[data_decoder::mojom::kServiceName] =
       base::BindRepeating(&base::ASCIIToUTF16, "Data Decoder Service");
 
--- a/content/browser/tracing/tracing_controller_impl.h
+++ b/content/browser/tracing/tracing_controller_impl.h
@@ -15,7 +15,6 @@
 #include "content/common/content_export.h"
 #include "content/public/browser/tracing_controller.h"
 #include "mojo/public/cpp/system/data_pipe_drainer.h"
-#include "services/tracing/public/mojom/tracing.mojom.h"
 
 namespace base {
 
@@ -89,7 +88,6 @@ class TracingControllerImpl : public Tra
   void CompleteFlush();
 
   std::unique_ptr<PerfettoFileTracer> perfetto_file_tracer_;
-  tracing::mojom::CoordinatorPtr coordinator_;
   std::vector<std::unique_ptr<tracing::BaseAgent>> agents_;
   std::unique_ptr<TracingDelegate> delegate_;
   std::unique_ptr<base::trace_event::TraceConfig> trace_config_;
--- a/content/shell/browser/web_test/web_test_content_browser_client.cc
+++ b/content/shell/browser/web_test/web_test_content_browser_client.cc
@@ -28,7 +28,6 @@
 #include "content/shell/browser/shell_browser_context.h"
 #include "content/shell/browser/web_test/blink_test_controller.h"
 #include "content/shell/browser/web_test/fake_bluetooth_chooser.h"
-#include "content/shell/browser/web_test/mojo_web_test_helper.h"
 #include "content/shell/browser/web_test/web_test_bluetooth_fake_adapter_setter_impl.h"
 #include "content/shell/browser/web_test/web_test_browser_context.h"
 #include "content/shell/browser/web_test/web_test_browser_main_parts.h"
@@ -48,11 +47,6 @@ namespace {
 
 WebTestContentBrowserClient* g_web_test_browser_client;
 
-void BindWebTestHelper(mojom::MojoWebTestHelperRequest request,
-                       RenderFrameHost* render_frame_host) {
-  MojoWebTestHelper::Create(std::move(request));
-}
-
 class TestOverlayWindow : public OverlayWindow {
  public:
   TestOverlayWindow() = default;
@@ -156,7 +150,6 @@ void WebTestContentBrowserClient::Expose
           &WebTestContentBrowserClient::CreateFakeBluetoothChooser,
           base::Unretained(this)),
       ui_task_runner);
-  registry->AddInterface(base::BindRepeating(&MojoWebTestHelper::Create));
   registry->AddInterface(
       base::BindRepeating(&WebTestContentBrowserClient::BindClipboardHost,
                           base::Unretained(this)),
@@ -314,7 +307,6 @@ bool WebTestContentBrowserClient::CanIgn
 void WebTestContentBrowserClient::ExposeInterfacesToFrame(
     service_manager::BinderRegistryWithArgs<content::RenderFrameHost*>*
         registry) {
-  registry->AddInterface(base::Bind(&BindWebTestHelper));
 }
 
 std::unique_ptr<LoginDelegate> WebTestContentBrowserClient::CreateLoginDelegate(
--- a/content/shell/browser/shell_content_browser_client.cc
+++ b/content/shell/browser/shell_content_browser_client.cc
@@ -47,7 +47,6 @@
 #include "content/shell/common/web_test/fake_bluetooth_chooser.mojom.h"
 #include "content/shell/common/web_test/web_test_bluetooth_fake_adapter_setter.mojom.h"
 #include "content/shell/common/web_test/web_test_switches.h"
-#include "content/test/data/mojo_web_test_helper_test.mojom.h"
 #include "device/bluetooth/public/mojom/test/fake_bluetooth.mojom.h"
 #include "media/mojo/buildflags.h"
 #include "net/ssl/client_cert_identity.h"
@@ -162,7 +161,7 @@ const service_manager::Manifest& GetCont
         .ExposeCapability(
             "renderer",
             service_manager::Manifest::InterfaceList<
-                mojom::MojoWebTestHelper, mojom::FakeBluetoothChooser,
+                mojom::FakeBluetoothChooser,
                 mojom::WebTestBluetoothFakeAdapterSetter,
                 bluetooth::mojom::FakeBluetooth>())
         .RequireCapability(echo::mojom::kServiceName, "echo")
@@ -170,10 +169,6 @@ const service_manager::Manifest& GetCont
         .RequireCapability(ws::mojom::kServiceName, "test")
         .RequireCapability("test_ws", "test")
 #endif
-        .ExposeInterfaceFilterCapability_Deprecated(
-            "navigation:frame", "renderer",
-            service_manager::Manifest::InterfaceList<
-                mojom::MojoWebTestHelper>())
         .Build()
   };
   return *manifest;
--- a/mojo/public/js/BUILD.gn
+++ b/mojo/public/js/BUILD.gn
@@ -67,7 +67,7 @@ js_library("bindings_lite_sources") {
   ]
 }
 
-if (enable_mojom_closure_compile || closure_compile) {
+if (enable_mojom_closure_compile) {
   js_binary("bindings_lite") {
     outputs = [
       bindings_lite_compiled_file,
