# cat nvidia-settings-defaults.patch
--- a/nvidia-settings-@PV@/samples/Makefile
+++ b/nvidia-settings-@PV@/samples/Makefile
@@ -59,6 +59,7 @@
 LDFLAGS               += -L $(XNVCTRL_DIR)
 LIBS                  += -lXNVCtrl -lXext -lX11
 
+LDFLAGS               += -Wl,--as-needed
 
 ##############################################################################
 # samples
--- a/nvidia-settings-@PV@/src/libXNVCtrl/utils.mk
+++ b/nvidia-settings-@PV@/src/libXNVCtrl/utils.mk
@@ -42,6 +42,8 @@
 LDFLAGS               ?=
 BIN_LDFLAGS           ?=
 
+LDFLAGS               += -Wl,--as-needed
+
 HOST_CC               ?= $(CC)
 HOST_LD               ?= $(LD)
 HOST_CFLAGS           ?= $(CFLAGS)
@@ -63,7 +65,7 @@
 
 INSTALL               ?= install
 INSTALL_BIN_ARGS      ?= -m 755
-INSTALL_LIB_ARGS      ?= -m 644
+INSTALL_LIB_ARGS      ?= -m 755
 INSTALL_DOC_ARGS      ?= -m 644
 
 M4                    ?= m4
--- a/nvidia-settings-@PV@/utils.mk
+++ b/nvidia-settings-@PV@/utils.mk
@@ -42,6 +42,8 @@
 LDFLAGS               ?=
 BIN_LDFLAGS           ?=
 
+LDFLAGS               += -Wl,--as-needed
+
 HOST_CC               ?= $(CC)
 HOST_LD               ?= $(LD)
 HOST_CFLAGS           ?= $(CFLAGS)
@@ -63,7 +65,7 @@
 
 INSTALL               ?= install
 INSTALL_BIN_ARGS      ?= -m 755
-INSTALL_LIB_ARGS      ?= -m 644
+INSTALL_LIB_ARGS      ?= -m 755
 INSTALL_DOC_ARGS      ?= -m 644
 
 M4                    ?= m4

# cat nvidia-settings-libXNVCtrl-so.patch
--- a/nvidia-settings-@PV@/src/libXNVCtrl/xnvctrl.mk
+++ b/nvidia-settings-@PV@/src/libXNVCtrl/xnvctrl.mk
@@ -36,8 +36,8 @@
 
 XNVCTRL_CFLAGS ?=
 
-
-LIBXNVCTRL = $(OUTPUTDIR)/libXNVCtrl.a
+LIBXNVCTRLNAME = libXNVCtrl.so
+LIBXNVCTRL = $(OUTPUTDIR)/$(LIBXNVCTRLNAME)
 
 LIBXNVCTRL_SRC = $(XNVCTRL_DIR)/NVCtrl.c
 
@@ -46,4 +46,8 @@
 $(eval $(call DEFINE_OBJECT_RULE,TARGET,$(LIBXNVCTRL_SRC)))
 
 $(LIBXNVCTRL) : $(LIBXNVCTRL_OBJ)
-	$(call quiet_cmd,AR) ru $@ $(LIBXNVCTRL_OBJ)
+	$(call quiet_cmd,RM) $@ $@.*
+	$(CC) -shared -Wl,-soname=$@.0 -o $@.$(NVIDIA_VERSION) $(LDFLAGS) $^ -lXext -lX11
+	ln -s $@.$(NVIDIA_VERSION) $@.0
+	ln -s $@.0 $@
+
--- a/nvidia-settings-@PV@/src/Makefile
+++ b/nvidia-settings-@PV@/src/Makefile
@@ -252,6 +252,11 @@
 	$(MKDIR) $(BINDIR)
 	$(INSTALL) $(INSTALL_BIN_ARGS) $< $(BINDIR)/$(notdir $<)
 
+	$(MKDIR) $(LIBDIR)
+	$(INSTALL) $(INSTALL_LIB_ARGS) $(LIBXNVCTRLNAME).$(NVIDIA_VERSION) $(LIBDIR)
+	ln -s $(LIBXNVCTRLNAME).$(NVIDIA_VERSION) $(LIBDIR)/$(LIBXNVCTRLNAME).0
+	ln -s $(LIBXNVCTRLNAME).$(NVIDIA_VERSION) $(LIBDIR)/$(LIBXNVCTRLNAME)
+
 $(eval $(call DEBUG_INFO_RULES, $(NVIDIA_SETTINGS)))
 $(NVIDIA_SETTINGS).unstripped: $(OBJS) $(LIBXNVCTRL)
 	$(call quiet_cmd,LINK) $(CFLAGS) $(LDFLAGS) $(BIN_LDFLAGS) \

# cat nvidia-settings-linker.patch
--- a/nvidia-settings-@PV@/utils.mk
+++ b/nvidia-settings-@PV@/utils.mk
@@ -475,7 +475,7 @@
 define READ_ONLY_OBJECT_FROM_FILE_RULE
   $$(OUTPUTDIR)/$$(notdir $(1)).o: $(1)
 	$(at_if_quiet)cd $$(dir $(1)); \
-	$$(call quiet_cmd_no_at,LD) -r -z noexecstack --format=binary \
+	$$(call quiet_cmd_no_at,NVLD) -r -z noexecstack --format=binary \
 	    $$(notdir $(1)) -o $$(OUTPUTDIR_ABSOLUTE)/$$(notdir $$@)
 	$$(call quiet_cmd,OBJCOPY) \
 	    --rename-section .data=.rodata,contents,alloc,load,data,readonly \
--- a/nvidia-settings-@PV@/src/libXNVCtrl/utils.mk
+++ b/nvidia-settings-@PV@/src/libXNVCtrl/utils.mk
@@ -475,7 +475,7 @@
 define READ_ONLY_OBJECT_FROM_FILE_RULE
   $$(OUTPUTDIR)/$$(notdir $(1)).o: $(1)
 	$(at_if_quiet)cd $$(dir $(1)); \
-	$$(call quiet_cmd_no_at,LD) -r -z noexecstack --format=binary \
+	$$(call quiet_cmd_no_at,NVLD) -r -z noexecstack --format=binary \
 	    $$(notdir $(1)) -o $$(OUTPUTDIR_ABSOLUTE)/$$(notdir $$@)
 	$$(call quiet_cmd,OBJCOPY) \
 	    --rename-section .data=.rodata,contents,alloc,load,data,readonly \

# cat nvidia-settings-makefile.patch
--- a/nvidia-settings-@PV@/src/Makefile
+++ b/nvidia-settings-@PV@/src/Makefile
@@ -37,14 +37,6 @@
 
 PKG_CONFIG            ?= pkg-config
 
-ifndef GTK2_CFLAGS
-  GTK2_CFLAGS          := $(shell $(PKG_CONFIG) --cflags gtk+-2.0)
-endif
-
-ifndef GTK2_LDFLAGS
-  GTK2_LDFLAGS         := -Wl,--no-as-needed $(shell $(PKG_CONFIG) --libs gtk+-2.0)
-endif
-
 ifndef GTK3_AVAILABLE
   GTK3_AVAILABLE := $(shell $(PKG_CONFIG) --exists gtk+-3.0 && echo 1)
 endif
@@ -117,11 +109,6 @@
 
 NVIDIA_SETTINGS_VERSION := $(NVIDIA_VERSION)
 
-GTK2LIB_NAME = libnvidia-gtk2.so
-GTK2LIB_DIR  = $(OUTPUTDIR)/gtk2
-GTK2LIB = $(OUTPUTDIR)/$(GTK2LIB_NAME)
-GTK2LIB_SONAME = $(GTK2LIB_NAME).$(NVIDIA_SETTINGS_VERSION)
-
 ifdef BUILD_GTK3LIB
   GTK3LIB_NAME = libnvidia-gtk3.so
   GTK3LIB_DIR  = $(OUTPUTDIR)/gtk3
@@ -185,7 +172,6 @@
 # for "--as-needed" linker behavior).
 LIBS += -lX11 -lXext -lm $(LIBDL_LIBS)
 
-GTK2_LIBS += $(GTK2_LDFLAGS)
 GTK3_LIBS += $(GTK3_LDFLAGS)
 
 # Include all the source lists; dist-files.mk will define NVIDIA_SETTINGS_SRC
@@ -204,7 +190,6 @@
 OBJS        = $(call BUILD_OBJECT_LIST,$(SRC))
 XCP_OBJS    = $(call BUILD_OBJECT_LIST,$(XCP_SRC))
 
-GTK2_OBJS    = $(call BUILD_OBJECT_LIST_WITH_DIR,$(GTK_SRC),$(GTK2LIB_DIR))
 GTK3_OBJS    = $(call BUILD_OBJECT_LIST_WITH_DIR,$(GTK_SRC),$(GTK3LIB_DIR))
 IMAGE_OBJS    = $(addprefix $(OUTPUTDIR)/,$(addsuffix .o,$(notdir $(IMAGE_FILES))))
 IMAGE_HEADERS = $(addprefix $(OUTPUTDIR)/,$(addsuffix .h,$(notdir $(IMAGE_FILES))))
@@ -229,9 +214,6 @@
 
 $(call BUILD_OBJECT_LIST,$(XCP_SRC)): CFLAGS += -fPIC
 
-$(call BUILD_OBJECT_LIST_WITH_DIR,$(GTK_SRC),$(GTK2LIB_DIR)): \
-    CFLAGS += $(GTK2_CFLAGS) -fPIC -I $(XCONFIG_PARSER_DIR)/..
-
 ifdef BUILD_GTK3LIB
   $(call BUILD_OBJECT_LIST_WITH_DIR,$(GTK_SRC),$(GTK3LIB_DIR)): \
       CFLAGS += $(GTK3_CFLAGS) -fPIC -I $(XCONFIG_PARSER_DIR)/..
@@ -255,14 +237,12 @@
 
 .PHONY: all install NVIDIA_SETTINGS_install clean clobber
 
-all: $(NVIDIA_SETTINGS) $(GTK2LIB) $(GTK3LIB)
+all: $(NVIDIA_SETTINGS) $(GTK3LIB)
 
 install: NVIDIA_SETTINGS_install NVIDIA_GTKLIB_install
 
-NVIDIA_GTKLIB_install: $(GTK2LIB) $(GTK3LIB)
+NVIDIA_GTKLIB_install: $(GTK3LIB)
 	$(MKDIR) $(LIBDIR)
-	$(INSTALL) $(INSTALL_LIB_ARGS) $(GTK2LIB) \
-	    $(LIBDIR)/$(GTK2LIB_SONAME)
 ifdef BUILD_GTK3LIB
 	$(INSTALL) $(INSTALL_LIB_ARGS) $(GTK3LIB) \
 	    $(LIBDIR)/$(GTK3LIB_SONAME)
@@ -277,14 +257,6 @@
 	$(call quiet_cmd,LINK) $(CFLAGS) $(LDFLAGS) $(BIN_LDFLAGS) \
 	    -rdynamic -o $@ $(OBJS) $(LIBXNVCTRL) $(LIBS)
 
-$(eval $(call DEBUG_INFO_RULES, $(GTK2LIB)))
-$(GTK2LIB).unstripped: $(GTK2_OBJS) $(XCP_OBJS) $(IMAGE_OBJS) $(VERSION_MK)
-	$(call quiet_cmd,LINK) -shared $(CFLAGS) $(LDFLAGS) $(BIN_LDFLAGS) \
-	    $(LIBXNVCTRL) $(LIBS) $(GTK2_LIBS) \
-	    -Wl,--unresolved-symbols=ignore-all -o $@ \
-	    -Wl,-soname -Wl,$(GTK2LIB_SONAME) \
-	    $(GTK2_OBJS) $(IMAGE_OBJS) $(XCP_OBJS)
-
 ifdef BUILD_GTK3LIB
 $(eval $(call DEBUG_INFO_RULES, $(GTK3LIB)))
 $(GTK3LIB).unstripped: $(GTK3_OBJS) $(XCP_OBJS) $(IMAGE_OBJS) $(VERSION_MK)
@@ -302,12 +274,9 @@
 clean clobber:
 	rm -rf $(NVIDIA_SETTINGS) *~ \
 		$(OUTPUTDIR)/*.o $(OUTPUTDIR)/*.d \
-		$(GTK2LIB) $(GTK3LIB) $(GTK2LIB_DIR) $(GTK3LIB_DIR) \
+		$(GTK3LIB) $(GTK3LIB_DIR) \
 		$(IMAGE_HEADERS) $(LIBXNVCTRL)
 
-$(foreach src,$(GTK_SRC), \
-    $(eval $(call DEFINE_OBJECT_RULE_WITH_DIR,TARGET,$(src),$(GTK2LIB_DIR))))
-
 ifdef BUILD_GTK3LIB
 $(foreach src,$(GTK_SRC), \
     $(eval $(call DEFINE_OBJECT_RULE_WITH_DIR,TARGET,$(src),$(GTK3LIB_DIR))))
@@ -320,7 +289,6 @@
 # Build $(IMAGE_HEADERS)
 $(foreach png,$(IMAGE_FILES), \
   $(eval $(call BINARY_DATA_HEADER_RULE,$(png))))
-$(GTK2_OBJS): $(IMAGE_HEADERS)
 ifdef BUILD_GTK3LIB
   $(GTK3_OBJS): $(IMAGE_HEADERS)
 endif

# cat nvidia-settings-validate.patch
--- a/nvidia-settings-@PV@/doc/nvidia-settings.desktop
+++ b/nvidia-settings-@PV@/doc/nvidia-settings.desktop
@@ -1,11 +1,11 @@
 [Desktop Entry]
 Type=Application
-Encoding=UTF-8
 Name=NVIDIA X Server Settings
 Comment=Configure NVIDIA X Server Settings
-Exec=__UTILS_PATH__/nvidia-settings
-Icon=__PIXMAP_PATH__/nvidia-settings.png
-Categories=__NVIDIA_SETTINGS_DESKTOP_CATEGORIES__
+Exec=nvidia-settings
+Icon=nvidia-settings
+Categories=System;Settings
+Keywords=nvidia;vulkan;opengl;driver
 
 # Translations provided by Sun Microsystems
 Name[de]=NVIDIA X-Server-Einstellungen


